name: Packaging

on:
  - push

jobs:
  format:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5.3.0
        with:
          python-version: "3.11"

      - name: Install tox
        run: python -m pip install tox

      - name: Run black
        run: tox -e format

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5.3.0
        with:
          python-version: "3.11"

      - name: Install tox
        run: python -m pip install tox

      - name: Run flake8
        run: tox -e lint

  typecheck:
    name: Type check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5.3.0
        with:
          python-version: "3.11"

      - name: Install tox
        run: python -m pip install tox

      - name: Run mypy
        run: python -m tox -e typecheck

  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python:
          - version: "3.11"
            toxenv: "py311"
          - version: "3.10"
            toxenv: "py310"
          - version: "3.9"
            toxenv: "py39"
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5.3.0
        with:
          python-version: ${{ matrix.python.version }}

      - name: Install tox
        run: python -m pip install tox

      - name: Run pytest
        run: tox -e ${{ matrix.python.toxenv }}

  build_source_dist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5.3.0
        with:
          python-version: "3.11"

      - name: Install build
        run: python -m pip install build

      - name: Run build
        run: python -m build --sdist

      - uses: actions/upload-artifact@v3
        with:
          path: ./dist/*.tar.gz

  build_wheel:
    name: Build wheel
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5.3.0
        with:
          python-version: "3.11"

      - name: Install build
        run: python -m pip install build

      - name: Build wheels
        run: pyproject-build --wheel --outdir wheels

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheels/*.whl

  publish:
    name: Publish package
    if: startsWith(github.event.ref, 'refs/tags/v')
    needs:
      - format
      - lint
      - typecheck
      - test
      - build_source_dist
      - build_wheel
    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: artifact
          path: ./dist

      - uses: pypa/gh-action-pypi-publish@v1.9.0
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
